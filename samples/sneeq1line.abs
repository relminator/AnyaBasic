 # AnyaBasic Sneeq in 1 line #
start Type GameStateType start PLAY = 0 GAME_OVER = 1 end Type KeyValue start RIGHT = 205 LEFT = 203 UP = 200 DOWN = 208 ESCAPE = 1 SPACE = 57 end Type SneeqSegment start x = -120 y = 10 end Type SneeqType start x = 7 y = 8 dx = 1 dy = 0 length = 15 speedDelay = 10 end Type FruitType start x = 13 y = 10 end var ScreenWidth =  640 var ScreenHeight =  480 var TileSize = 16 var MapWidth = ScreenWidth/TileSize var MapHeight = ScreenHeight/TileSize var frame = 0 SneeqType sneeq SneeqSegment segments[MapWidth * MapHeight] FruitType fruit var gameState = GameStateType.PLAY var score = 0 function wrap( a, min, max ) start if( a < min ) then a = max if( a > max ) then a = min return a end function init() start for( var i  = 0 to sneeq.length -1 step 1 ) start segments[i].x = -120 segments[i].y = -120 end sneeq.x = 2 + int(random(MapWidth-4)) sneeq.y = 2 + int(random(MapHeight-4)) sneeq.length = 1 sneeq.speedDelay = 10 fruit.x = 2 + int(random(MapWidth-4)) fruit.y = 2 + int(random(MapHeight-4)) score = 0 end function DrawSneeq() start for( var i = 1 to sneeq.length - 1 step 1) start DrawEllipse(segments[i].x * TileSize,segments[i].y * TileSize,TileSize/2,TileSize/2,0, 1,1,1,0.71)+ DrawEllipse(segments[i].x * TileSize,segments[i].y * TileSize,TileSize/2,TileSize/2,0, 0,1,0,1) end var x = sneeq.x * TileSize var y = sneeq.y * TileSize DrawEllipse(x,y,TileSize/2+1,TileSize/2+1,0, 1,0,1,1)+ DrawEllipse(x,y,TileSize/2+1,TileSize/2+1,0, 0,1,0,1) end function drawFruit() start var x = fruit.x * TileSize var y = fruit.y * TileSize DrawEllipse(x,y,TileSize/2,TileSize/2,0, 0,1,0,1)+ DrawEllipse(x,y,TileSize/2,TileSize/2,0, 1,1,1,1) end function drawGrid() start setColor(1,1,1,1) for( var y =0 to MapHeight step 1) start DrawLine(0, y* TileSize, screenWidth, y * tileSize) end for( var x = 0 to MapWidth step 1) start DrawLine(x * tileSize, 0, x * tileSize, screenHeight) end end function draw() start drawGrid() drawFruit() drawSneeq() if( gameState == GameStateType.PLAY ) then start drawString( 0,0, abs(sin((frame)*0.01)), abs(sin((frame)*0.05)), abs(sin((frame)*0.02)),1,"Score:" + int(Score) ) end if( gameState == GameStateType.GAME_OVER ) then start drawString( 180,200, abs(sin((frame)*0.01)), abs(sin((frame)*0.05)), abs(sin((frame)*0.02)),1,"GAME OVER!" ) drawString( 20,300, 1, 1, 0,1,"PRESS SPACE TO CONT." ) end end function ControlSneeq() start if( keyDown(KeyValue.UP) ) then start sneeq.dy = -1 sneeq.dx = 0 end if( keyDown(KeyValue.DOWN) ) then start sneeq.dy = 1 sneeq.dx = 0 end if( keyDown(KeyValue.LEFT) ) then start sneeq.dx = -1 sneeq.dy = 0 end if( keyDown(KeyValue.RIGHT) ) then start sneeq.dx = 1 sneeq.dy = 0 end end function moveSneeq() start sneeq.x = wrap(sneeq.x + sneeq.dx, 0, MapWidth) sneeq.y = wrap(sneeq.y + sneeq.dy, 0, MapHeight) end function updateSegments() start segments[0].x = sneeq.x segments[0].y = sneeq.y var i = sneeq.length - 1 while( i > 0) start segments[i].x = segments[i-1].x segments[i].y = segments[i-1].y i = i -1 end end function UpdateSneeq() start if( (frame % sneeq.SpeedDelay) == 0 ) then start ControlSneeq() updateSegments() moveSneeq() end end function checkCollision() start # Fruit # if( (int(sneeq.x) == int(fruit.x)) && (int(sneeq.y) == int(fruit.y)) ) then start sneeq.length = sneeq.length + 1 fruit.x = 2 + int(random(MapWidth-4)) fruit.y = 2 + int(random(MapHeight-4)) sneeq.speedDelay = 10 - (sneeq.length/2) if(sneeq.speedDelay < 2 ) then sneeq.speedDelay  = 2 score = score + 1 end # Segments # for( var i = 1 to sneeq.length - 1 step 1) start if( (int(sneeq.x) == int(segments[i].x)) && (int(sneeq.y) == int(segments[i].y)) ) then start gameState = GameStateType.GAME_OVER break end end end function update() start if( gameState == GameStateType.PLAY ) then start checkCollision() UpdateSneeq() end if( gameState == GameStateType.GAME_OVER ) then start if( keyDown(KeyValue.SPACE) ) then start init() gameState = GameStateType.PLAY end end end screen(ScreenWidth,ScreenHeight) init() while( !(KeyDown(1)) && !WindowClosed() )  # Do the graphics loop until we pressed ESC or closed the window # start frame = frame + 1 cls()				# Clear the screen # update() Draw() delay(14) 			# Sleep for 14 milliseconds # screenFlip()        # Show the frame buffer # end exit(0)  # Clean up graphics# end

